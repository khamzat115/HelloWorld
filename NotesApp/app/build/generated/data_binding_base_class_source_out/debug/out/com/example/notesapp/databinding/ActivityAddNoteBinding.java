// Generated by view binder compiler. Do not edit!
package com.example.notesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.notesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddNoteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView backImg;

  @NonNull
  public final ImageView checkImg;

  @NonNull
  public final EditText noteEt;

  @NonNull
  public final EditText titleEt;

  @NonNull
  public final Toolbar toolbar;

  private ActivityAddNoteBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView backImg,
      @NonNull ImageView checkImg, @NonNull EditText noteEt, @NonNull EditText titleEt,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.backImg = backImg;
    this.checkImg = checkImg;
    this.noteEt = noteEt;
    this.titleEt = titleEt;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_img;
      ImageView backImg = ViewBindings.findChildViewById(rootView, id);
      if (backImg == null) {
        break missingId;
      }

      id = R.id.check_img;
      ImageView checkImg = ViewBindings.findChildViewById(rootView, id);
      if (checkImg == null) {
        break missingId;
      }

      id = R.id.note_et;
      EditText noteEt = ViewBindings.findChildViewById(rootView, id);
      if (noteEt == null) {
        break missingId;
      }

      id = R.id.title_et;
      EditText titleEt = ViewBindings.findChildViewById(rootView, id);
      if (titleEt == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityAddNoteBinding((ConstraintLayout) rootView, backImg, checkImg, noteEt,
          titleEt, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
